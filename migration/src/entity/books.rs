//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "Books")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub isbn: String,
    pub author: Option<String>,
    pub category: Option<String>,
    pub on_shelf_time: Date,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub price: Decimal,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::book_managers::Entity")]
    BookManagers,
}

impl Related<super::book_managers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BookManagers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
